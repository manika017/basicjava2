We have recapped again to declare a variable
   
   int age = 12;
    String name = "sai";
    
datatype varaiblename = valueofthevariable ;
In above we have 2 variables. age which is of type int (remember int can take only numbers) and another one name which is of type String (takes characters). int , String are the data types provided by Java.
Can you represent a person with a single variable using any one of the Java supplied data types (int, String, double)? No. When you want to represent a person usually you describe with a name, age, grade, height, weight. If you want to represent the person you should have 5 variables (for _name one variable, age another one etc.,). What we need is a single variable p to represent a person. This is where we will learn big concept in Java which is defining your own data types.
Your own data types
You can define your own data type using basic data types (int , String ). This is like building a shape using small lego blocks.
    class Person{

    }
Here you have defined your own data type called Person. Above class is keyword and Person is the name you have given to your data type.
The syntax is
class yourdatatypename{
}
Then you can define what you want in this data type. Lets fill in with some data types (lego blocks)
    class Person{
    
    int age;
        int name;
        int grade;
        int height;
        int weight;
    }
    
Now the data type Person is complete.
Using this your data type
How can we use this data type in our program?. Remember again how you are used to declare a basic Java su pplied variable, which is datatype followed by variable.(int age;) Here also same.
Person person1;
Here the data type is Person and variable is person1
We have slight difference in assigning values to this variable. In regular data type like int you have used = 10 ( justed used = and then value). But for the data types you have created
Person person1 = new Person();
= new datatype();
new is the keyword and you are saying to Java that I want to create new value ( the technical term object which we will learn more about this in the next class) for this data type I have created. Once you have done this, then you can assign individual parts of Person (age,name,grade,height,weight) using . (dot) like below
    
    Person person1 = new Person();
    person1.age = 20;
    person1.name = "sai";
    person1.grade = 7;
    person1.height = 5;
    person1.weight = 100;
    
In order to assign age we use our variable person1 and then . (dot) and then one of the property you have defined in the class.
In order to use the variable for printing you use the same way like below
    System.out.println( person1.name + " age is:" + person1.age);
    
Complete Program
Open Eclpse
Create Java project called MyOwnDataSample
Create class called Application.java and make sure that public static void main() check mark is checked.
Print line using System.out to say learning data sample 
System.out.println("learning my own data type");
Run the program and make sure that it prints.
At this time we are ready to add our own data type
File->New->Class and name Person
Make sure that public static void main() is unchecked ( this is the difference between when you have created Application class where you have checked it and this class where you uncheck. The reason is our Java project is going to have 2 classes but only one class needs to have main method so that when you run, the program starts from first instructions in main)
In newly created Person class input the following
    
    class Person{
        String name;
        int age;
        int grade;
        int height;
        
        int weight;
    }
    
Now in Application class after System.out.println
    
    Person person1 = new Person();
    person1.name = "sai1";
    person1.age = 12;
    
    Person person2 = new Person();
    person1.name = "sai2";
    person1.age = 15;

    System.out.println(person1.name + " age is:" + person1.age);
    System.out.println(person2.name + " age is:" + person2.age);
    
Run the program you should see sai1 age is:12 sai2 age is:15
In above we have 2 persons with different values.
Create program with some more data types
Repeat the above program but this time come up with your data types
Some of them you came up with are 
Movie
Animal
House
Recipe
Note The data type which we wil be calling class now-on-wards should be Singular Noun.
Some common mistakes in the class
Using the variables without declaring them.

you need to declare variable
        int age = 10;       // You are declaring or you can call defining

        System.out.println(age);        // Here you are using the variable
        
Eclipse gives the message like below 
The curly ({ } ) brackets.
In Java the curly brackets ( { and }) form a logical block and every opening of { should have proper }. Class starts with { and ends with }. Within the class method like main starts with { and }. Within the method the if stars with { and ends with }.
    public class Application{

        public static void main(String[] args){

            if(  ){

            }

            // You can create your own block and put code in it.
            {

            }
        }
    }
    
Not every line ends with ';'
When we started the programming we said every line ends with ';'. Yes and No. Now that we have know more about Java we rephrase this that every statement should end with ';'. What forms statement and what not?
statement is roughly equivalent to sentences in natural english language. When you see if it does not end and hence we don't put ;
    if( x > 0); {       // Wrong to put ';' as this not statement where sentence is not done.

    }
    
Homework
Create session6 notes in notes/session6.txt in git repository
Project with creating your own data type 
Project name MyHomeWorkDataSample
Class Application.java with main
New class and here it depends on what you choose for your own data type 
Hint: If you look around you can get lot of possibilities for data types like . Bike, Car, Picture, Kitchen, Room and soon
Check-in homework folder in git repository
